version: "3.8"

networks:
  otel:

services:

  elasticsearch:
    image: elastic/elasticsearch:7.17.14
    container_name: elasticsearch
    networks:
      - otel
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1g -Xmx1g # Xms initial size of total heap space, Xmx maximum size of total heap space
    ports:
      - 9200:9200

  apm-server:  # service for pushing traces to elastic
    image: elastic/apm-server:7.17.14
    container_name: apm-server
    networks:
      - otel
    ports:
      - 8200:8200
      - 1514:1514/udp
    environment:
      - output.elasticsearch.hosts=[elasticsearch:9200]
    depends_on:
      - elasticsearch
 
  kibana:
    image: elastic/kibana:7.17.14
    container_name: kibana
    networks:
      - otel
    ports:
      - 5601:5601

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - 9090:9090
    networks:
      - otel
    command:
      # - --enable-feature=remote-write-receiver  # deprecated
      - --web.enable-remote-write-receiver
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - 9411:9411
    networks:
      - otel

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    networks:
      - otel
  # default user: admin
  # default password: admin
  # dashboard for otel-collector metrics: https://grafana.com/grafana/dashboards/15983-opentelemetry-collector/

  otel_collector:
    image: otel/opentelemetry-collector-contrib
    container_name: otel_collector
    ports:
      - 4317:4317  # OTLP gRPC receiver
      - 4318:4318  # OTLP http receiver
      - 8888:8888  # Prometheus metrics exposed by the collector
      - 8889:8889  # Prometheus exporter metrics
      - 1888:1888  # pprof extension
      - 13133:13133 # health_check extension
      - 55679:55679  # zpages extension, which trace operations via /debug/tracez
    networks:
      - otel
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    command: ["--config=/etc/otel-collector-config.yaml"]

  auto_otel_app:
    image: auto_otel_app
    build: 
      context: .
      dockerfile: Dockerfile.auto_otel
    container_name: auto_otel_app
    deploy:
      mode: replicated
      replicas: 1
    ports:
      - 8000:8000
    networks:
      - otel
    environment:
      - APP_LOGLEVEL=INFO
      - OTEL_EXPORTER_OTLP_INSECURE=true
      - OTEL_PYTHON_LOGGING_AUTO_INSTRUMENTATION_ENABLED=true
    command: >-
      opentelemetry-instrument 
        --exporter_otlp_endpoint otel_collector:4317
        --exporter_otlp_metrics_endpoint otel_collector:4317
        --traces_exporter otlp
        --logs_exporter otlp
        --metrics_exporter otlp
        --service_name auto-otel-app
        uvicorn auto.main:app --host 0.0.0.0 --port 8000
    # command: opentelemetry-instrument --traces_exporter console --metrics_exporter none --logs_exporter none --service_name auto-otel-app uvicorn auto.main:app --host 0.0.0.0 --port 8000
    # command: opentelemetry-instrument --traces_exporter none --metrics_exporter none --logs_exporter console --service_name auto-otel-app uvicorn auto.main:app --host 0.0.0.0 --port 8000
    # command: opentelemetry-instrument --traces_exporter none --metrics_exporter console --logs_exporter none --service_name auto-otel-app uvicorn auto.main:app --host 0.0.0.0 --port 8000
    # command: uvicorn auto.main:app --host 0.0.0.0 --port 8000 --reload
    # docker run -it --rm -p 8000:8000 auto_otel_app bash

  prog_otel_app:
    image: prog_otel_app
    build: 
      context: .
      dockerfile: Dockerfile.prog_otel
    container_name: prog_otel_app
    ports:
      - 8001:8000
    networks:
      - otel
    environment:
      - APP_LOGLEVEL=INFO
      - OTEL_EXPORTER_OTLP_INSECURE=true
      - OTEL_PYTHON_LOGGING_AUTO_INSTRUMENTATION_ENABLED=true
    command: >-
      opentelemetry-instrument 
        --exporter_otlp_endpoint otel_collector:4317
        --traces_exporter otlp
        --logs_exporter otlp
        --metrics_exporter otlp
        --service_name prog-otel-app
        --log_level debug
        uvicorn prog.main:app --host 0.0.0.0 --port 8000
    depends_on:
      - otel_collector
    # command: opentelemetry-instrument --traces_exporter console --metrics_exporter none --logs_exporter none --service_name prog-otel-app uvicorn prog.main:app --host 0.0.0.0 --port 8000
    # command: opentelemetry-instrument --traces_exporter none --metrics_exporter none --logs_exporter console --service_name prog-otel-app uvicorn prog.main:app --host 0.0.0.0 --port 8000
    # command: opentelemetry-instrument --traces_exporter none --metrics_exporter console --logs_exporter none --service_name prog-otel-app uvicorn prgo.main:app --host 0.0.0.0 --port 8000
    # command: uvicorn prog.main:app --host 0.0.0.0 --port 8000 --reload
    # docker run -it --rm -p 8000:8000 prog_otel_app bash
