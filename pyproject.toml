[tool.poetry]
name = "observability"
version = "0.1.0"
description = "my studies on observability"
authors = ["Jos√© Nunes <josenunesra@gmail.com>"]
readme = "README.md"
repository = "https://github.com/josejnra/observability"
homepage = "https://github.com/josejnra/observability"
documentation = "https://github.com/josejnra/observability"
classifiers = [
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3 :: Only",
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Version Control :: Git",
    "Topic :: System :: Archiving :: Packaging",
    "Topic :: System :: Installation/Setup",
    "Topic :: System :: Software Distribution",
    "Development Status :: 3 - Alpha"
]

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.104.1"
flask = "^3.0.0"
uvicorn = "^0.24.0.post1"
opentelemetry-distro = "^0.42b0"
opentelemetry-exporter-otlp = "^1.21.0"
sqlalchemy = "^2.0.23"
confluent-kafka = "2.2.0"
click = "^8.1.7"
opentelemetry-instrumentation-confluent-kafka = "^0.42b0"
ruff = "^0.6.2"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-mock = "^3.12.0"
pytest-cov = "^4.1.0"
mypy = "^1.7.0"
faker = "^20.0.0"

[tool.poetry.extras]
dev_types = ["types-paramiko", "types-python-dateutil", "types-pytz", "types-PyYAML", "types-requests", "types-six"]

[tool.ruff]
line-length = 88
extend-exclude = ["migrations"]
cache-dir = "/tmp/.ruff_cache"
exclude = ["alembic"]

[tool.ruff.lint]
preview = true
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
    "PL",  # pylint
    "PT",  # flake8-pytest-style
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
preview = true
quote-style = "double"
docstring-code-format = true

[tool.mypy]
exclude = ["migrations"] 
cache_dir = "/tmp/.mypy_cache"

[tool.taskipy.tasks]
lint = 'ruff check . && ruff check . --diff'
format = 'ruff check . --fix && ruff format .'

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
